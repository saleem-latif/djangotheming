# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py39

[pycodestyle]
exclude = .git,.tox,migrations,settings
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D106 = Missing docstring in public nested class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D213 = Multi-line docstring summary should start at the second line
; D406 = Section name should end with a newline
; D407 = Missing dashed underline after section
; D411 = Missing blank line before section
; D412 = No blank lines allowed between a section header and its content
; D413 = Missing blank line after last section
ignore = D101,D106,D200,D203,D212,D213,D406,D407,D411,D412,D413
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = settings.test
addopts = --cov theming --cov-report term-missing --cov-report xml
norecursedirs = .* requirements

[isort]
line_length = 120
known_django = django
known_first_party = theming
include_trailing_comma = true
multi_line_output = 3
sections = FUTURE,STDLIB,THIRDPARTY,DJANGO,DJANGOAPP,FIRSTPARTY,LOCALFOLDER

[wheel]
universal = 1

[testenv]
deps =
    master: -r{toxinidir}/requirements/test.txt
commands =
    py.test -Wd {posargs}

[testenv:quality]
whitelist_externals =
    make
    rm
    touch
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    touch tests/__init__.py
    pylint -j 0 theming tests test_utils
    pylint -j 0 theming tests test_utils
    rm tests/__init__.py
    pycodestyle theming tests test_utils
    pydocstyle theming tests test_utils
    isort --check-only --recursive theming tests test_utils manage.py setup.py


